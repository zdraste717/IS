import pandas as pd
from sqlalchemy import create_engine, text

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
engine = create_engine("postgresql+psycopg2://postgres:430251@localhost:5432/postgres")

# –ó–∞–≥—Ä—É–∂–∞–µ–º Excel —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏
xls = pd.ExcelFile(r"C:\Users\evgen\Documents\–î–ò–ü–õ–û–ú\–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.xlsx")

# –°–ª–æ–≤–∞—Ä—å: –∏–º—è_–ª–∏—Å—Ç–∞ ‚Üí –∏–º—è_—Ç–∞–±–ª–∏—Ü—ã
sheet_to_table = {
    "–ù–∞—É—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": "scienes",
    "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": "sport",
    "–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": "creation",
    "–†–∞–∑–ª–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å": "various_level",
    "–ü—É–±–ª–∏–∫–∞—Ü–∏–∏": "publications",
    "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": "student_government",
    "–ò–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": "other_achiev",
    "–û—Å–≤–æ–µ–Ω–∏–µ –¥–æ–ø. –ø—Ä–æ–≥—Ä–∞–º–º": "add_programm",
    "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã": "experience"
}

# –°–ª–æ–≤–∞—Ä—å: –∏–º—è_–ª–∏—Å—Ç–∞ ‚Üí —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ Excel ‚Üí –ë–î
column_mappings = {
    "–ù–∞—É—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è":{
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–ù–∞–∑–≤–∞–Ω–∏–µ –ù–ò–†": "srw_name",
        "–ó–∞–∫–∞–∑—á–∏–∫": "customer",
        "–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã": "l_programm",
        "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": "p_name",
        "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞": "s_date",
        "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è": "f_date",
        "–†–µ–∑—É–ª—å—Ç–∞—Ç": "result"
    },
    "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": {
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–í–∏–¥ —Å–ø–æ—Ä—Ç–∞": "sport_t",
        "–£—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö": "compet",
        "–î–∞—Ç–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π": "date_c",
        "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ": "note"
    },
    "–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": {
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏": "activity_t",
        "–£—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö/—Ñ–µ—Å—Ç–∏–≤–∞–ª—è—Ö": "part_fest",
        "–î–∞—Ç–∞": "date_f",
        "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ": "note"
    },
    "–†–∞–∑–ª–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å":{
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–í–∏–¥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": "event_t",
        "–£—Ä–æ–≤–µ–Ω—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": "level_e",
        "–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": "name_e",
        "–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è": "venue",
        "–î–∞—Ç–∞": "date_e",
        "–†–µ–∑—É–ª—å—Ç–∞—Ç": "result"
    },
    "–ü—É–±–ª–∏–∫–∞—Ü–∏–∏":{
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–°–æ–∞–≤—Ç–æ—Ä(—ã)": "coauthors",
        "–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã": "fname_work",
        "–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ": "output_d",
        "–§–æ—Ä–º–∞ —Ä–∞–±–æ—Ç—ã": "form_w",
        "–¢–∏–ø –∏–∑–¥–∞–Ω–∏—è": "public_t",
        "–°—Ç–∞—Ç—å—è –≤—Ö–æ–¥–∏—Ç –≤ –ø–µ—Ä–µ—á–µ–Ω—å –í–ê–ö, –†–ò–ù–¶ –∏ —Ç.–¥.": "article_inc"
    },
    "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ":{
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–û—Ä–≥–∞–Ω —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è": "body_g",
        "–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏": "activity_t",
        "–ü–µ—Ä–∏–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏": "activity_per",
        "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ": "note"
    },
    "–ò–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è": {
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏": "activity_t",
        "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ": "achiev",
        "–î–∞—Ç–∞": "date_o",
        "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ": "note"
    },
    "–û—Å–≤–æ–µ–Ω–∏–µ –¥–æ–ø. –ø—Ä–æ–≥—Ä–∞–º–º": {
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã": "name_p",
        "–í–∏–¥ –æ–±—É—á–µ–Ω–∏—è": "education_t",
        "–ö–æ–ª-–≤–æ —á–∞—Å–æ–≤": "hours",
        "–°—Ä–æ–∫–∏ –æ–±—É—á–µ–Ω–∏—è": "terms",
        "–ú–µ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏—è": "education_p",
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã": "name_d"
    },
    "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã": {
        "–§–ò–û": "fullname",
        "–ì—Ä—É–ø–ø–∞": "group_s",
        "–§–∞–∫—É–ª—å—Ç–µ—Ç": "faculty",
        "–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã": "place_w",
        "–í–∏–¥ —Ä–∞–±–æ—Ç—ã": "work_t",
        "–î–æ–ª–∂–Ω–æ—Å—Ç—å": "title_j",
        "–°—Ä–æ–∫–∏": "deadlines",
        "–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏": "respons"
    }
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞
for sheet in sheet_to_table.keys():
    print(f"\nüìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏—Å—Ç: {sheet}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏—Å—Ç –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏
    df = xls.parse(sheet)
    mapping = column_mappings[sheet]
    df.rename(columns=mapping, inplace=True)
    df = df[list(mapping.values())]

    # –ò–º—è —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î
    table_name = sheet_to_table[sheet]

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    with engine.begin() as connection:
        existing_df = pd.read_sql_table(table_name, con=connection)

        # –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –ø—É—Å—Ç–∞, —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        if not existing_df.empty:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            df = pd.concat([existing_df, df])
            # –£–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã
            df.drop_duplicates(inplace=True)
            # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
            df = df[~df.index.isin(existing_df.index)]

        # –ï—Å–ª–∏ –µ—Å—Ç—å, —á—Ç–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º
        if not df.empty:
            df.to_sql(table_name, con=connection, if_exists='append', index=False)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫: {len(df)}")
        else:
            print("‚ÑπÔ∏è –î—É–±–ª–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.")
